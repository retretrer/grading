NEW SAFETY STRATEGY
-------------------

* Rather than executing arbitrary code willy-nilly, the TA simply creates a config object that gets passed to the GE.
* You know what, fuck it, the TA basically stays the same. Concierge becomes the object that converts chained methods to an array of configs consisting of function, argument pairs.
  - The conversion happens in a sandbox.


Overall
-------

Properties:
* CSS hypothetical
* Position relative to:
  document, viewport, other elements

Compare network response:
* bytes by file
* bytes by filetype
* time
* Page size

Flags:
* repeat test even if it passes

New:
* click and draggable widget window
* pinnable widget window
* load tests from JSON file
* browser action
  * toggle button to show/hide feedback within browser action
  * turn on / turn off
  * always run on a page
* better UI
* show current on widget
* interactive GUI for test editor
* use a service worker to handle loading the engine and template resources?

Documenting:
* new README

Debugging:
* debug mode
* pause mode

Code cleanliness:
* make private TA methods actually private
* merge TA.value and TA.values by querying the GradeBook for values instead
* Target.value setter calls gradebook.registerQuestion() instead?
* separate collectors and reporters into separate objects within the TA?

Fixes:
* absolute position gives position relative to viewport. is that desired behavior?
* expand toEqual to match arrays and objects as well

Performance:
* cssProperty creates a FSL
* how performant are sandboxed iframes???
* can I create sandboxed web workers???